<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/data/jpa 
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
    	http://www.springframework.org/schema/tx 
      		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:component-scan base-package="com.slb" />

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="customObjectMapper" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<bean id="customObjectMapper" class="com.slb.core.jackson.CustomObjectMapper" />

	<mvc:resources mapping="/static/**" location="/static/" />
	<mvc:default-servlet-handler />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n/messages" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>





	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="20000000" />

	</bean>

	<!-- THYMELEAF: Template Resolver for email templates -->
	<bean id="emailTemplateResolver"
		class="org.thymeleaf.templateresolver.ClassLoaderTemplateResolver">
		<property name="prefix" value="mail/" />
		<property name="templateMode" value="HTML5" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="order" value="1" />
	</bean>

	<!-- THYMELEAF: Template Engine (Spring3-specific version) -->
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolvers">
			<set>
				<ref bean="emailTemplateResolver" />
			</set>
		</property>
	</bean>

	<!-- THYMELEAF: View Resolver - implementation of Spring's ViewResolver 
		interface -->
	<!-- (we would not need this if our app was not web) <bean id="viewResolver" 
		class="org.thymeleaf.spring4.view.ThymeleafViewResolver"> <property name="templateEngine" 
		ref="templateEngine" /> <property name="characterEncoding" value="UTF-8" 
		/> </bean> -->

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>


</beans>